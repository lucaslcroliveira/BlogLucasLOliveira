{
  "hash": "69a410e59a97245091382728f018b912",
  "result": {
    "markdown": "---\ntitle: \"Explorando o pacote pandas\"\nauthor: \"Lucas Lacerda Oliveira\"\ndate: \"2022-07-07\"\ncategories: [phyton, pandas] \n---\n\n## Introdução\n\nO pacote pandas é considerado por muitos o melhor pacote da linguagem de programação python para trabalhar com dataframes. Nesse post iremos explorar melhor o que esse pacote traz de facilidade na hora de analisarmos dados. A base de dados utilizada é disponibilizada pelo kaggle e nela temos informações sobre vacinação em diversos países.\n\n## Desenvolvimento\n\nComeçamos importando o pacote pandas e informando como iremos chamar o pacote no decorrer do nosso código (`pd`).\n\n``` {.python .cell-code}\nimport pandas as pd\n```\n\n\nApós importação do pacote iremos fazer importação da base de dados utilizando a função `read_csv` e iremos atribuir a base de dados para o objeto `df`.\n\n``` {.python .cell-code}\ndf = pd.read_csv(\"C:/Users/Lucas/Downloads/country_vaccinations.csv\")\n```\n\n\nPara ver se deu tudo certo na importação da base de dados podemos visualizar o começo da nossa base de dados com a função base do python chamada head. Por default vemos as primeiras 4 observações da base, mas podemos alterar o argumento de quantas obserações queremos ter como output.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>iso_code</th>\n      <th>date</th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>people_fully_vaccinated</th>\n      <th>daily_vaccinations_raw</th>\n      <th>daily_vaccinations</th>\n      <th>total_vaccinations_per_hundred</th>\n      <th>people_vaccinated_per_hundred</th>\n      <th>people_fully_vaccinated_per_hundred</th>\n      <th>daily_vaccinations_per_million</th>\n      <th>vaccines</th>\n      <th>source_name</th>\n      <th>source_website</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>2021-01-10</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Pfizer/BioNTech</td>\n      <td>Ministry of Health</td>\n      <td>https://shendetesia.gov.al/vaksinimi-anticovid...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>2021-01-11</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>64.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>22.0</td>\n      <td>Pfizer/BioNTech</td>\n      <td>Ministry of Health</td>\n      <td>https://shendetesia.gov.al/vaksinimi-anticovid...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>2021-01-12</td>\n      <td>128.0</td>\n      <td>128.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>64.0</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>NaN</td>\n      <td>22.0</td>\n      <td>Pfizer/BioNTech</td>\n      <td>Ministry of Health</td>\n      <td>https://shendetesia.gov.al/vaksinimi-anticovid...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>2021-01-13</td>\n      <td>188.0</td>\n      <td>188.0</td>\n      <td>NaN</td>\n      <td>60.0</td>\n      <td>63.0</td>\n      <td>0.01</td>\n      <td>0.01</td>\n      <td>NaN</td>\n      <td>22.0</td>\n      <td>Pfizer/BioNTech</td>\n      <td>Ministry of Health</td>\n      <td>https://shendetesia.gov.al/vaksinimi-anticovid...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>2021-01-14</td>\n      <td>266.0</td>\n      <td>266.0</td>\n      <td>NaN</td>\n      <td>78.0</td>\n      <td>66.0</td>\n      <td>0.01</td>\n      <td>0.01</td>\n      <td>NaN</td>\n      <td>23.0</td>\n      <td>Pfizer/BioNTech</td>\n      <td>Ministry of Health</td>\n      <td>https://shendetesia.gov.al/vaksinimi-anticovid...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nPara obter informações gerais sobre a base de dados podemos utilizar a função `info` que nos retorna as informações sobre o preenchimento e a classe de cada uma das variáveis.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf.info() # informações sobre a base de dados\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 3396 entries, 0 to 3395\nData columns (total 15 columns):\n #   Column                               Non-Null Count  Dtype  \n---  ------                               --------------  -----  \n 0   country                              3396 non-null   object \n 1   iso_code                             3132 non-null   object \n 2   date                                 3396 non-null   object \n 3   total_vaccinations                   2225 non-null   float64\n 4   people_vaccinated                    1833 non-null   float64\n 5   people_fully_vaccinated              1186 non-null   float64\n 6   daily_vaccinations_raw               1861 non-null   float64\n 7   daily_vaccinations                   3264 non-null   float64\n 8   total_vaccinations_per_hundred       2225 non-null   float64\n 9   people_vaccinated_per_hundred        1833 non-null   float64\n 10  people_fully_vaccinated_per_hundred  1186 non-null   float64\n 11  daily_vaccinations_per_million       3264 non-null   float64\n 12  vaccines                             3396 non-null   object \n 13  source_name                          3396 non-null   object \n 14  source_website                       3396 non-null   object \ndtypes: float64(9), object(6)\nmemory usage: 398.1+ KB\n```\n:::\n:::\n\n\nSe o objetivo for somente ver como as variáveis do dataframe estão nomeadas podemos chamar `df.columns` e obter essa informação.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndf.columns # colunas no df \n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nIndex(['country', 'iso_code', 'date', 'total_vaccinations',\n       'people_vaccinated', 'people_fully_vaccinated',\n       'daily_vaccinations_raw', 'daily_vaccinations',\n       'total_vaccinations_per_hundred', 'people_vaccinated_per_hundred',\n       'people_fully_vaccinated_per_hundred', 'daily_vaccinations_per_million',\n       'vaccines', 'source_name', 'source_website'],\n      dtype='object')\n```\n:::\n:::\n\n\nQuando queremos acessar a base as observações da base de dados uma a uma em uma lista podemos utilizar chamar `df.values` e obtemos uma lista com cada uma das observações separadas.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\ndf.values # mostra todas as observações \n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\narray([['Albania', 'ALB', '2021-01-10', ..., 'Pfizer/BioNTech',\n        'Ministry of Health',\n        'https://shendetesia.gov.al/vaksinimi-anticovid-kryhen-424-vaksinime-ne-dy-qendrat-e-vaksinimit-ne-shkoder-dhe-tirane/'],\n       ['Albania', 'ALB', '2021-01-11', ..., 'Pfizer/BioNTech',\n        'Ministry of Health',\n        'https://shendetesia.gov.al/vaksinimi-anticovid-kryhen-424-vaksinime-ne-dy-qendrat-e-vaksinimit-ne-shkoder-dhe-tirane/'],\n       ['Albania', 'ALB', '2021-01-12', ..., 'Pfizer/BioNTech',\n        'Ministry of Health',\n        'https://shendetesia.gov.al/vaksinimi-anticovid-kryhen-424-vaksinime-ne-dy-qendrat-e-vaksinimit-ne-shkoder-dhe-tirane/'],\n       ...,\n       ['Wales', nan, '2021-02-14', ...,\n        'Oxford/AstraZeneca, Pfizer/BioNTech',\n        'Government of the United Kingdom',\n        'https://coronavirus.data.gov.uk/details/healthcare'],\n       ['Wales', nan, '2021-02-15', ...,\n        'Oxford/AstraZeneca, Pfizer/BioNTech',\n        'Government of the United Kingdom',\n        'https://coronavirus.data.gov.uk/details/healthcare'],\n       ['Wales', nan, '2021-02-16', ...,\n        'Oxford/AstraZeneca, Pfizer/BioNTech',\n        'Government of the United Kingdom',\n        'https://coronavirus.data.gov.uk/details/healthcare']],\n      dtype=object)\n```\n:::\n:::\n\n\nA função `loc` é bastante útil se quisermos ter uma saída mais organizada de uma informação específica como podemos ver abaixo.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ndf.loc[1] # um jeito mais organizado de ver uma observação \ndf.loc[[1,2,3]] # pra mais de uma observação \ndf.loc[[1,2,3],[\"country\", \"daily_vaccinations\"]] # selecionando as observações e também as variáveis \ndf.loc[1:3]\ndf.loc[1:5:2] # selecionando observações 2 a 2 \n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>iso_code</th>\n      <th>date</th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>people_fully_vaccinated</th>\n      <th>daily_vaccinations_raw</th>\n      <th>daily_vaccinations</th>\n      <th>total_vaccinations_per_hundred</th>\n      <th>people_vaccinated_per_hundred</th>\n      <th>people_fully_vaccinated_per_hundred</th>\n      <th>daily_vaccinations_per_million</th>\n      <th>vaccines</th>\n      <th>source_name</th>\n      <th>source_website</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>2021-01-11</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>64.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>22.0</td>\n      <td>Pfizer/BioNTech</td>\n      <td>Ministry of Health</td>\n      <td>https://shendetesia.gov.al/vaksinimi-anticovid...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>2021-01-13</td>\n      <td>188.0</td>\n      <td>188.0</td>\n      <td>NaN</td>\n      <td>60.0</td>\n      <td>63.0</td>\n      <td>0.01</td>\n      <td>0.01</td>\n      <td>NaN</td>\n      <td>22.0</td>\n      <td>Pfizer/BioNTech</td>\n      <td>Ministry of Health</td>\n      <td>https://shendetesia.gov.al/vaksinimi-anticovid...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>2021-01-15</td>\n      <td>308.0</td>\n      <td>308.0</td>\n      <td>NaN</td>\n      <td>42.0</td>\n      <td>62.0</td>\n      <td>0.01</td>\n      <td>0.01</td>\n      <td>NaN</td>\n      <td>22.0</td>\n      <td>Pfizer/BioNTech</td>\n      <td>Ministry of Health</td>\n      <td>https://shendetesia.gov.al/vaksinimi-anticovid...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nPara filtramos a base de dados podemos utilizar a função `query` em que o argumento recebido por ela será uma condição de alguma das variáveis existentes no dataframe.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\ndf.query('total_vaccinations >= 1000'). head() # filtra os dados \ndf.query('total_vaccinations >= 100000') # filtra os dados \n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>iso_code</th>\n      <th>date</th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>people_fully_vaccinated</th>\n      <th>daily_vaccinations_raw</th>\n      <th>daily_vaccinations</th>\n      <th>total_vaccinations_per_hundred</th>\n      <th>people_vaccinated_per_hundred</th>\n      <th>people_fully_vaccinated_per_hundred</th>\n      <th>daily_vaccinations_per_million</th>\n      <th>vaccines</th>\n      <th>source_name</th>\n      <th>source_website</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>80</th>\n      <td>Argentina</td>\n      <td>ARG</td>\n      <td>2021-01-08</td>\n      <td>107542.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>10519.0</td>\n      <td>0.24</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>233.0</td>\n      <td>Sputnik V</td>\n      <td>Ministry of Health</td>\n      <td>http://datos.salud.gob.ar/dataset/vacunas-cont...</td>\n    </tr>\n    <tr>\n      <th>85</th>\n      <td>Argentina</td>\n      <td>ARG</td>\n      <td>2021-01-13</td>\n      <td>166833.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13323.0</td>\n      <td>0.37</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>295.0</td>\n      <td>Sputnik V</td>\n      <td>Ministry of Health</td>\n      <td>http://datos.salud.gob.ar/dataset/vacunas-cont...</td>\n    </tr>\n    <tr>\n      <th>87</th>\n      <td>Argentina</td>\n      <td>ARG</td>\n      <td>2021-01-15</td>\n      <td>200759.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13317.0</td>\n      <td>0.44</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>295.0</td>\n      <td>Sputnik V</td>\n      <td>Ministry of Health</td>\n      <td>http://datos.salud.gob.ar/dataset/vacunas-cont...</td>\n    </tr>\n    <tr>\n      <th>92</th>\n      <td>Argentina</td>\n      <td>ARG</td>\n      <td>2021-01-20</td>\n      <td>247933.0</td>\n      <td>243539.0</td>\n      <td>4394.0</td>\n      <td>NaN</td>\n      <td>11586.0</td>\n      <td>0.55</td>\n      <td>0.54</td>\n      <td>0.01</td>\n      <td>256.0</td>\n      <td>Sputnik V</td>\n      <td>Ministry of Health</td>\n      <td>http://datos.salud.gob.ar/dataset/vacunas-cont...</td>\n    </tr>\n    <tr>\n      <th>93</th>\n      <td>Argentina</td>\n      <td>ARG</td>\n      <td>2021-01-21</td>\n      <td>265724.0</td>\n      <td>249372.0</td>\n      <td>16352.0</td>\n      <td>17791.0</td>\n      <td>11704.0</td>\n      <td>0.59</td>\n      <td>0.55</td>\n      <td>0.04</td>\n      <td>259.0</td>\n      <td>Sputnik V</td>\n      <td>Ministry of Health</td>\n      <td>http://datos.salud.gob.ar/dataset/vacunas-cont...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>3391</th>\n      <td>Wales</td>\n      <td>NaN</td>\n      <td>2021-02-12</td>\n      <td>753669.0</td>\n      <td>749445.0</td>\n      <td>4224.0</td>\n      <td>33715.0</td>\n      <td>27743.0</td>\n      <td>23.90</td>\n      <td>23.77</td>\n      <td>0.13</td>\n      <td>8799.0</td>\n      <td>Oxford/AstraZeneca, Pfizer/BioNTech</td>\n      <td>Government of the United Kingdom</td>\n      <td>https://coronavirus.data.gov.uk/details/health...</td>\n    </tr>\n    <tr>\n      <th>3392</th>\n      <td>Wales</td>\n      <td>NaN</td>\n      <td>2021-02-13</td>\n      <td>776224.0</td>\n      <td>771651.0</td>\n      <td>4573.0</td>\n      <td>22555.0</td>\n      <td>26285.0</td>\n      <td>24.62</td>\n      <td>24.47</td>\n      <td>0.15</td>\n      <td>8337.0</td>\n      <td>Oxford/AstraZeneca, Pfizer/BioNTech</td>\n      <td>Government of the United Kingdom</td>\n      <td>https://coronavirus.data.gov.uk/details/health...</td>\n    </tr>\n    <tr>\n      <th>3393</th>\n      <td>Wales</td>\n      <td>NaN</td>\n      <td>2021-02-14</td>\n      <td>790211.0</td>\n      <td>784809.0</td>\n      <td>5402.0</td>\n      <td>13987.0</td>\n      <td>26206.0</td>\n      <td>25.06</td>\n      <td>24.89</td>\n      <td>0.17</td>\n      <td>8312.0</td>\n      <td>Oxford/AstraZeneca, Pfizer/BioNTech</td>\n      <td>Government of the United Kingdom</td>\n      <td>https://coronavirus.data.gov.uk/details/health...</td>\n    </tr>\n    <tr>\n      <th>3394</th>\n      <td>Wales</td>\n      <td>NaN</td>\n      <td>2021-02-15</td>\n      <td>803178.0</td>\n      <td>795927.0</td>\n      <td>7251.0</td>\n      <td>12967.0</td>\n      <td>24418.0</td>\n      <td>25.47</td>\n      <td>25.24</td>\n      <td>0.23</td>\n      <td>7745.0</td>\n      <td>Oxford/AstraZeneca, Pfizer/BioNTech</td>\n      <td>Government of the United Kingdom</td>\n      <td>https://coronavirus.data.gov.uk/details/health...</td>\n    </tr>\n    <tr>\n      <th>3395</th>\n      <td>Wales</td>\n      <td>NaN</td>\n      <td>2021-02-16</td>\n      <td>820339.0</td>\n      <td>807351.0</td>\n      <td>12988.0</td>\n      <td>17161.0</td>\n      <td>23033.0</td>\n      <td>26.02</td>\n      <td>25.61</td>\n      <td>0.41</td>\n      <td>7305.0</td>\n      <td>Oxford/AstraZeneca, Pfizer/BioNTech</td>\n      <td>Government of the United Kingdom</td>\n      <td>https://coronavirus.data.gov.uk/details/health...</td>\n    </tr>\n  </tbody>\n</table>\n<p>1305 rows × 15 columns</p>\n</div>\n```\n:::\n:::\n\n\nOutra funçao interessante é a `select_dtypes` em que podemos utilizá-la para fazermos uma seleção de variáveis de um único tipo de classe.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\ndf.select_dtypes(include='object') # seleciona uma classe específica das variáveis do df \ndf.select_dtypes(include='float') # seleciona uma classe específica das variáveis do df \n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>people_fully_vaccinated</th>\n      <th>daily_vaccinations_raw</th>\n      <th>daily_vaccinations</th>\n      <th>total_vaccinations_per_hundred</th>\n      <th>people_vaccinated_per_hundred</th>\n      <th>people_fully_vaccinated_per_hundred</th>\n      <th>daily_vaccinations_per_million</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>64.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>128.0</td>\n      <td>128.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>64.0</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>NaN</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>188.0</td>\n      <td>188.0</td>\n      <td>NaN</td>\n      <td>60.0</td>\n      <td>63.0</td>\n      <td>0.01</td>\n      <td>0.01</td>\n      <td>NaN</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>266.0</td>\n      <td>266.0</td>\n      <td>NaN</td>\n      <td>78.0</td>\n      <td>66.0</td>\n      <td>0.01</td>\n      <td>0.01</td>\n      <td>NaN</td>\n      <td>23.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>3391</th>\n      <td>753669.0</td>\n      <td>749445.0</td>\n      <td>4224.0</td>\n      <td>33715.0</td>\n      <td>27743.0</td>\n      <td>23.90</td>\n      <td>23.77</td>\n      <td>0.13</td>\n      <td>8799.0</td>\n    </tr>\n    <tr>\n      <th>3392</th>\n      <td>776224.0</td>\n      <td>771651.0</td>\n      <td>4573.0</td>\n      <td>22555.0</td>\n      <td>26285.0</td>\n      <td>24.62</td>\n      <td>24.47</td>\n      <td>0.15</td>\n      <td>8337.0</td>\n    </tr>\n    <tr>\n      <th>3393</th>\n      <td>790211.0</td>\n      <td>784809.0</td>\n      <td>5402.0</td>\n      <td>13987.0</td>\n      <td>26206.0</td>\n      <td>25.06</td>\n      <td>24.89</td>\n      <td>0.17</td>\n      <td>8312.0</td>\n    </tr>\n    <tr>\n      <th>3394</th>\n      <td>803178.0</td>\n      <td>795927.0</td>\n      <td>7251.0</td>\n      <td>12967.0</td>\n      <td>24418.0</td>\n      <td>25.47</td>\n      <td>25.24</td>\n      <td>0.23</td>\n      <td>7745.0</td>\n    </tr>\n    <tr>\n      <th>3395</th>\n      <td>820339.0</td>\n      <td>807351.0</td>\n      <td>12988.0</td>\n      <td>17161.0</td>\n      <td>23033.0</td>\n      <td>26.02</td>\n      <td>25.61</td>\n      <td>0.41</td>\n      <td>7305.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>3396 rows × 9 columns</p>\n</div>\n```\n:::\n:::\n\n\nUma das funções que considero mais importantes de saber utilizar na análise de dados é o `groupby` e abaixo podemos ver como é fácil a sua utilização no `python`.\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\ndf.groupby(by='country').size() # agrupamento \ndf.groupby(by='country')['total_vaccinations_per_hundred'].mean() # agrupamento com seleção de \"coluna resposta\"\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\ncountry\nAlbania                      0.017857\nAlgeria                      0.000000\nAndorra                      1.465000\nAnguilla                     4.470000\nArgentina                    0.818750\n                              ...    \nTurks and Caicos Islands     8.310000\nUnited Arab Emirates        29.550488\nUnited Kingdom              12.176429\nUnited States                7.026304\nWales                       11.999250\nName: total_vaccinations_per_hundred, Length: 94, dtype: float64\n```\n:::\n:::\n\n\nContrário ao que vemos com a função `info` que nos retorna os dados válidos, abaixo podemos ver como saber a quantidade de dados *nulos* em nosso dataframe.\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\ndf.isnull().sum() # mostra a quantidade de valores ausentes por variável \n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\ncountry                                   0\niso_code                                264\ndate                                      0\ntotal_vaccinations                     1171\npeople_vaccinated                      1563\npeople_fully_vaccinated                2210\ndaily_vaccinations_raw                 1535\ndaily_vaccinations                      132\ntotal_vaccinations_per_hundred         1171\npeople_vaccinated_per_hundred          1563\npeople_fully_vaccinated_per_hundred    2210\ndaily_vaccinations_per_million          132\nvaccines                                  0\nsource_name                               0\nsource_website                            0\ndtype: int64\n```\n:::\n:::\n\n\nPor fim, abaixo podemos ver a utilização das funções `upper` e `lower` que transforma todos os caracters de uma string para maiúsculo e tranforma todos os caracters de uma string para minúsculo, respectivamente.\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\ndf.country.str.upper().head()\ndf.country.str.lower().head()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\n0    albania\n1    albania\n2    albania\n3    albania\n4    albania\nName: country, dtype: object\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}