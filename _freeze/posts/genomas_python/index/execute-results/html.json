{
  "hash": "f471b271416dc406b02bb93ab7ad5801",
  "result": {
    "markdown": "---\ntitle: \"Comparação de genomas\"\nauthor: \"Lucas Lacerda Oliveira\"\ndate: \"2022-06-30\"\ncategories: [phyton]\n---\n\n\n### Comparação de genomas\n\nPretende-se comparar duas sequências de DNA: **SARS-CoV-2** identificado na cidade de Wuhan (China) e o Virus da **Influenza A** identificado na California (US).\n\nO DNA é uma molécula presente em todos os seres vivos, que é responsável por armazenar as caracterı́sticas hereditárias. Ela é composta por sequências de nucleotı́deos, que podem ser de quatro tipos: Adenina (**A**), Timina (**T**), Citosina (**C**) ou Guanina (**G**).\n\nNeste estudo de caso, queremos avaliar se estruturas com funções parecidas de organismos diferentes têm diferenças. Para isso vamos avaliar a quantidade de pares de nucleotı́deos.\n\nOs dados utilizados para este estudo referem-se a sequências de DNA disponı́veis nos seguintes links: [**SARS-CoV-2 Wuhan-Hu-1**](https://www.ncbi.nlm.nih.gov/nuccore/NC_045512.2?report=fasta) e [**Virus da Influenza A (California/07/2009(H1N1))**](https://www.ncbi.nlm.nih.gov/nuccore/CY266194.1?report=fasta).\n\nPara comparar as duas estruturas requere-se um mapa de calor (Heatmap) que permita realizar a comparação dos pares de nucleotı́deos. Comente sobre os resultados encontrados.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'reticulate' was built under R version 4.1.3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\ncovid = open('sequence_covid.txt').read()\ninfluenza = open('sequence_influenza.txt').read()\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nref_covid = {\n    'AA': covid.count('AA'),\n    'AT': covid.count('AT'),\n    'AC': covid.count('AC'),\n    'AG': covid.count('AG'),\n    'TT': covid.count('TT'),\n    'TC': covid.count('TC'),\n    'TG': covid.count('TG'),\n    'TA': covid.count('TA'),\n    'CC': covid.count('CC'),\n    'CA': covid.count('CA'),\n    'CG': covid.count('CG'),\n    'CT': covid.count('CT'),\n    'GG': covid.count('GG'),\n    'GA': covid.count('GA'),\n    'GC': covid.count('GC'),\n    'GT': covid.count('GT'),\n}\n\nprint(ref_covid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{'AA': 2144, 'AT': 2276, 'AC': 1999, 'AG': 1711, 'TT': 2439, 'TC': 1407, 'TG': 2549, 'TA': 2338, 'CC': 770, 'CA': 2053, 'CG': 427, 'CT': 2049, 'GG': 958, 'GA': 1586, 'GC': 1153, 'GT': 1962}\n```\n:::\n\n```{.python .cell-code}\nval_covid = [ref_covid['AA'], ref_covid['AC'], ref_covid['AG'], ref_covid['AT'], ref_covid['CA'], ref_covid['CC'], ref_covid['CG'], ref_covid['CT'], ref_covid['GA'], ref_covid['GC'], ref_covid['GG'], ref_covid['GT'], ref_covid['TA'], ref_covid['TC'], ref_covid['TG'], ref_covid['TT']]\n\nmatriz_covid = np.array(val_covid).reshape(4, 4)\nprint(matriz_covid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[2144 1999 1711 2276]\n [2053  770  427 2049]\n [1586 1153  958 1962]\n [2338 1407 2549 2439]]\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nplt.imshow(matriz_covid, cmap = 'Blues', origin=\"lower\")\nplt.xlabel('Segunda letra'); plt.ylabel('Primeira letra')\nplt.xticks((0,1,2,3),['A','C','G','T'])\nplt.yticks([3, 2, 1, 0],['T','G','C','A'])\nplt.title(\"Covid-19\")\n_ = plt.colorbar()\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nref_inf = {\n    'AA': influenza.count('AA'),\n    'AT': influenza.count('AT'),\n    'AC': influenza.count('AC'),\n    'AG': influenza.count('AG'),\n    'TT': influenza.count('TT'),\n    'TC': influenza.count('TC'),\n    'TG': influenza.count('TG'),\n    'TA': influenza.count('TA'),\n    'CC': influenza.count('CC'),\n    'CA': influenza.count('CA'),\n    'CG': influenza.count('CG'),\n    'CT': influenza.count('CT'),\n    'GG': influenza.count('GG'),\n    'GA': influenza.count('GA'),\n    'GC': influenza.count('GC'),\n    'GT': influenza.count('GT'),\n}\n\nprint(ref_inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{'AA': 130, 'AT': 117, 'AC': 75, 'AG': 141, 'TT': 54, 'TC': 81, 'TG': 112, 'TA': 48, 'CC': 56, 'CA': 128, 'CG': 37, 'CT': 67, 'GG': 90, 'GA': 158, 'GC': 75, 'GT': 61}\n```\n:::\n\n```{.python .cell-code}\nval_inf = [ref_inf['AA'], ref_inf['AC'], ref_inf['AG'], ref_inf['AT'], ref_inf['CA'], ref_inf['CC'], ref_inf['CG'], ref_inf['CT'], ref_inf['GA'], ref_inf['GC'], ref_inf['GG'], ref_inf['GT'], ref_inf['TA'], ref_inf['TC'], ref_inf['TG'], ref_inf['TT']]\n\nmatriz_inf = np.array(val_inf).reshape(4, 4)\nprint(matriz_inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[130  75 141 117]\n [128  56  37  67]\n [158  75  90  61]\n [ 48  81 112  54]]\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nplt.imshow(matriz_inf, cmap = 'Blues', origin=\"lower\")\nplt.xlabel('Segunda letra'); plt.ylabel('Primeira letra')\nplt.xticks((0,1,2,3),['A','C','G','T'])\nplt.yticks([3, 2, 1, 0],['T','G','C','A'])\nplt.title(\"Covid-19\")\n_ = plt.colorbar()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}