[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lucas Lacerda Oliveira",
    "section": "",
    "text": "phyton\n\n\nheatmap\n\n\nnumpy\n\n\n\n\n\n\n\n\n\n\n\nJun 30, 2022\n\n\nLucas Lacerda Oliveira\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre",
    "section": "",
    "text": "Local destinado a compartilhar as novidades que aprendo no curso de tópicos especiais em estatística computacional ministrado por Fábio Fajardo."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Comparação de genomas/Comparação de genomas.html",
    "href": "posts/Comparação de genomas/Comparação de genomas.html",
    "title": "Lucas L Oliveira",
    "section": "",
    "text": "covid = open('sequence_covid.txt').read()\ninfluenza = open('sequence_influenza.txt').read()\nref_covid = {\n    'AA': covid.count('AA'),\n    'AT': covid.count('AT'),\n    'AC': covid.count('AC'),\n    'AG': covid.count('AG'),\n    'TT': covid.count('TT'),\n    'TC': covid.count('TC'),\n    'TG': covid.count('TG'),\n    'TA': covid.count('TA'),\n    'CC': covid.count('CC'),\n    'CA': covid.count('CA'),\n    'CG': covid.count('CG'),\n    'CT': covid.count('CT'),\n    'GG': covid.count('GG'),\n    'GA': covid.count('GA'),\n    'GC': covid.count('GC'),\n    'GT': covid.count('GT'),\n}\n\npprint(ref_covid)\n{'AA': 2144,\n 'AC': 1999,\n 'AG': 1711,\n 'AT': 2276,\n 'CA': 2053,\n 'CC': 770,\n 'CG': 427,\n 'CT': 2049,\n 'GA': 1586,\n 'GC': 1153,\n 'GG': 958,\n 'GT': 1962,\n 'TA': 2338,\n 'TC': 1407,\n 'TG': 2549,\n 'TT': 2439}\nval_covid = [ref_covid['AA'], ref_covid['AC'], ref_covid['AG'], ref_covid['AT'], ref_covid['CA'], ref_covid['CC'], ref_covid['CG'], ref_covid['CT'], ref_covid['GA'], ref_covid['GC'], ref_covid['GG'], ref_covid['GT'], ref_covid['TA'], ref_covid['TC'], ref_covid['TG'], ref_covid['TT']]\nmatriz_covid = np.array(val_covid).reshape(4, 4)\npprint(matriz_covid)\narray([[2144, 1999, 1711, 2276],\n       [2053,  770,  427, 2049],\n       [1586, 1153,  958, 1962],\n       [2338, 1407, 2549, 2439]])\nplt.imshow(matriz_covid, cmap = 'Blues', origin=\"lower\")\nplt.xlabel('Segunda letra'); plt.ylabel('Primeira letra')\nplt.xticks((0,1,2,3),['A','C','G','T'])\nplt.yticks([3, 2, 1, 0],['T','G','C','A'])\nplt.title(\"Covid-19\")\n_ = plt.colorbar()\n\n\n\npng\n\n\nref_inf = {\n    'AA': influenza.count('AA'),\n    'AT': influenza.count('AT'),\n    'AC': influenza.count('AC'),\n    'AG': influenza.count('AG'),\n    'TT': influenza.count('TT'),\n    'TC': influenza.count('TC'),\n    'TG': influenza.count('TG'),\n    'TA': influenza.count('TA'),\n    'CC': influenza.count('CC'),\n    'CA': influenza.count('CA'),\n    'CG': influenza.count('CG'),\n    'CT': influenza.count('CT'),\n    'GG': influenza.count('GG'),\n    'GA': influenza.count('GA'),\n    'GC': influenza.count('GC'),\n    'GT': influenza.count('GT'),\n}\n\npprint(ref_inf)\n{'AA': 130,\n 'AC': 75,\n 'AG': 141,\n 'AT': 117,\n 'CA': 128,\n 'CC': 56,\n 'CG': 37,\n 'CT': 67,\n 'GA': 158,\n 'GC': 75,\n 'GG': 90,\n 'GT': 61,\n 'TA': 48,\n 'TC': 81,\n 'TG': 112,\n 'TT': 54}\nval_inf = [ref_inf['AA'], ref_inf['AC'], ref_inf['AG'], ref_inf['AT'], ref_inf['CA'], ref_inf['CC'], ref_inf['CG'], ref_inf['CT'], ref_inf['GA'], ref_inf['GC'], ref_inf['GG'], ref_inf['GT'], ref_inf['TA'], ref_inf['TC'], ref_inf['TG'], ref_inf['TT']]\nmatriz_inf = np.array(val_inf).reshape(4, 4)\npprint(matriz_inf)\narray([[130,  75, 141, 117],\n       [128,  56,  37,  67],\n       [158,  75,  90,  61],\n       [ 48,  81, 112,  54]])\nplt.imshow(matriz_inf, cmap = 'Blues', origin=\"lower\")\nplt.xlabel('Segunda letra'); plt.ylabel('Primeira letra')\nplt.xticks((0,1,2,3),['A','C','G','T'])\nplt.yticks([3, 2, 1, 0],['T','G','C','A'])\nplt.title(\"Covid-19\")\n_ = plt.colorbar()\n\n\n\npng"
  },
  {
    "objectID": "posts/genomas_python/index.html",
    "href": "posts/genomas_python/index.html",
    "title": "Comparação de sequência de genomas",
    "section": "",
    "text": "Desenvolvimento\nPara desenvolvermos o que foi enunciado acima utilizaremos o pacote reticulate que nos permite utilizar o python no RStudio. Dessa forma veremos abaixo que alguns dos pacotes não estarão sendo importados com o import matplotlib.pyplot as plt, por não ser necessário a sua importação, mas no decorrer do código será utilizado.\n\n\n\n\nimport numpy as np\n\n\ncovid = open('sequence_covid.txt').read()\ninfluenza = open('sequence_influenza.txt').read()\n\n\nref_covid = {\n    'AA': covid.count('AA'),\n    'AT': covid.count('AT'),\n    'AC': covid.count('AC'),\n    'AG': covid.count('AG'),\n    'TT': covid.count('TT'),\n    'TC': covid.count('TC'),\n    'TG': covid.count('TG'),\n    'TA': covid.count('TA'),\n    'CC': covid.count('CC'),\n    'CA': covid.count('CA'),\n    'CG': covid.count('CG'),\n    'CT': covid.count('CT'),\n    'GG': covid.count('GG'),\n    'GA': covid.count('GA'),\n    'GC': covid.count('GC'),\n    'GT': covid.count('GT'),\n}\n\nprint(ref_covid)\n\n{'AA': 2144, 'AT': 2276, 'AC': 1999, 'AG': 1711, 'TT': 2439, 'TC': 1407, 'TG': 2549, 'TA': 2338, 'CC': 770, 'CA': 2053, 'CG': 427, 'CT': 2049, 'GG': 958, 'GA': 1586, 'GC': 1153, 'GT': 1962}\n\nval_covid = [ref_covid['AA'], ref_covid['AC'], ref_covid['AG'], ref_covid['AT'], ref_covid['CA'], ref_covid['CC'], ref_covid['CG'], ref_covid['CT'], ref_covid['GA'], ref_covid['GC'], ref_covid['GG'], ref_covid['GT'], ref_covid['TA'], ref_covid['TC'], ref_covid['TG'], ref_covid['TT']]\n\nmatriz_covid = np.array(val_covid).reshape(4, 4)\nprint(matriz_covid)\n\n[[2144 1999 1711 2276]\n [2053  770  427 2049]\n [1586 1153  958 1962]\n [2338 1407 2549 2439]]\n\n\n\nplt.imshow(matriz_covid, cmap = 'Blues', origin=\"lower\")\nplt.xlabel('Segunda letra'); plt.ylabel('Primeira letra')\nplt.xticks((0,1,2,3),['A','C','G','T'])\nplt.yticks([3, 2, 1, 0],['T','G','C','A'])\nplt.title(\"Covid-19\")\n_ = plt.colorbar()\n\n\n\nref_inf = {\n    'AA': influenza.count('AA'),\n    'AT': influenza.count('AT'),\n    'AC': influenza.count('AC'),\n    'AG': influenza.count('AG'),\n    'TT': influenza.count('TT'),\n    'TC': influenza.count('TC'),\n    'TG': influenza.count('TG'),\n    'TA': influenza.count('TA'),\n    'CC': influenza.count('CC'),\n    'CA': influenza.count('CA'),\n    'CG': influenza.count('CG'),\n    'CT': influenza.count('CT'),\n    'GG': influenza.count('GG'),\n    'GA': influenza.count('GA'),\n    'GC': influenza.count('GC'),\n    'GT': influenza.count('GT'),\n}\n\nprint(ref_inf)\n\n{'AA': 130, 'AT': 117, 'AC': 75, 'AG': 141, 'TT': 54, 'TC': 81, 'TG': 112, 'TA': 48, 'CC': 56, 'CA': 128, 'CG': 37, 'CT': 67, 'GG': 90, 'GA': 158, 'GC': 75, 'GT': 61}\n\nval_inf = [ref_inf['AA'], ref_inf['AC'], ref_inf['AG'], ref_inf['AT'], ref_inf['CA'], ref_inf['CC'], ref_inf['CG'], ref_inf['CT'], ref_inf['GA'], ref_inf['GC'], ref_inf['GG'], ref_inf['GT'], ref_inf['TA'], ref_inf['TC'], ref_inf['TG'], ref_inf['TT']]\n\nmatriz_inf = np.array(val_inf).reshape(4, 4)\nprint(matriz_inf)\n\n[[130  75 141 117]\n [128  56  37  67]\n [158  75  90  61]\n [ 48  81 112  54]]\n\n\n\nplt.imshow(matriz_inf, cmap = 'Blues', origin=\"lower\")\nplt.xlabel('Segunda letra'); plt.ylabel('Primeira letra')\nplt.xticks((0,1,2,3),['A','C','G','T'])\nplt.yticks([3, 2, 1, 0],['T','G','C','A'])\nplt.title(\"Covid-19\")\n_ = plt.colorbar()"
  }
]